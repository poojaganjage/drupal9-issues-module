diff --git a/core/modules/aggregator/src/FeedViewBuilder.php b/core/modules/aggregator/src/FeedViewBuilder.php
index 5f50463..90f99b2 100644
--- a/core/modules/aggregator/src/FeedViewBuilder.php
+++ b/core/modules/aggregator/src/FeedViewBuilder.php
@@ -9,6 +9,7 @@
 use Drupal\Core\Entity\EntityViewBuilder;
 use Drupal\Core\Config\Config;
 use Drupal\Core\Language\LanguageManagerInterface;
+use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\Theme\Registry;
 use Drupal\Core\Url;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -18,6 +19,8 @@
  */
 class FeedViewBuilder extends EntityViewBuilder {
 
+  use StringTranslationTrait;
+
   /**
    * The 'aggregator.settings' config.
    *
@@ -142,7 +145,7 @@ public function buildComponents(array &$build, array $entities, array $displays,
         $build[$id]['feed_icon'] = [
           '#theme' => 'feed_icon',
           '#url' => $entity->getUrl(),
-          '#title' => t('@title feed', ['@title' => $entity->label()]),
+          '#title' => $this->t('@title feed', ['@title' => $entity->label()]),
         ];
       }
 
@@ -150,7 +153,7 @@ public function buildComponents(array &$build, array $entities, array $displays,
         $title_stripped = strip_tags($entity->label());
         $build[$id]['more_link'] = [
           '#type' => 'link',
-          '#title' => t('More<span class="visually-hidden"> posts about @title</span>', [
+          '#title' => $this->t('More<span class="visually-hidden"> posts about @title</span>', [
             '@title' => $title_stripped,
           ]),
           '#url' => Url::fromRoute('entity.aggregator_feed.canonical', ['aggregator_feed' => $entity->id()]),
diff --git a/core/modules/aggregator/src/Plugin/aggregator/fetcher/DefaultFetcher.php b/core/modules/aggregator/src/Plugin/aggregator/fetcher/DefaultFetcher.php
index d55cab2..4073a0b 100644
--- a/core/modules/aggregator/src/Plugin/aggregator/fetcher/DefaultFetcher.php
+++ b/core/modules/aggregator/src/Plugin/aggregator/fetcher/DefaultFetcher.php
@@ -8,6 +8,7 @@
 use Drupal\Core\Http\ClientFactory;
 use Drupal\Core\Messenger\MessengerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
+use Drupal\Core\StringTranslation\StringTranslationTrait;
 use GuzzleHttp\Exception\RequestException;
 use GuzzleHttp\Psr7\Request;
 use Psr\Http\Message\RequestInterface;
@@ -29,6 +30,8 @@
  */
 class DefaultFetcher implements FetcherInterface, ContainerFactoryPluginInterface {
 
+  use StringTranslationTrait;
+
   /**
    * The HTTP client to fetch the feed data with.
    *
@@ -127,7 +130,7 @@ public function fetch(FeedInterface $feed) {
     }
     catch (RequestException $e) {
       $this->logger->warning('The feed from %site seems to be broken because of error "%error".', ['%site' => $feed->label(), '%error' => $e->getMessage()]);
-      $this->messenger->addWarning(t('The feed from %site seems to be broken because of error "%error".', ['%site' => $feed->label(), '%error' => $e->getMessage()]));
+      $this->messenger->addWarning($this->t('The feed from %site seems to be broken because of error "%error".', ['%site' => $feed->label(), '%error' => $e->getMessage()]));
       return FALSE;
     }
   }
diff --git a/core/modules/aggregator/src/Plugin/aggregator/parser/DefaultParser.php b/core/modules/aggregator/src/Plugin/aggregator/parser/DefaultParser.php
index 66448fa..c95dc85 100644
--- a/core/modules/aggregator/src/Plugin/aggregator/parser/DefaultParser.php
+++ b/core/modules/aggregator/src/Plugin/aggregator/parser/DefaultParser.php
@@ -5,6 +5,7 @@
 use Drupal\aggregator\Plugin\ParserInterface;
 use Drupal\aggregator\FeedInterface;
 use Drupal\Core\Messenger\MessengerTrait;
+use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Laminas\Feed\Reader\Reader;
 use Laminas\Feed\Reader\Exception\ExceptionInterface;
 
@@ -22,6 +23,7 @@
 class DefaultParser implements ParserInterface {
 
   use MessengerTrait;
+  use StringTranslationTrait;
 
   /**
    * {@inheritdoc}
@@ -34,7 +36,7 @@ public function parse(FeedInterface $feed) {
     }
     catch (ExceptionInterface $e) {
       watchdog_exception('aggregator', $e);
-      $this->messenger()->addError(t('The feed from %site seems to be broken because of error "%error".', ['%site' => $feed->label(), '%error' => $e->getMessage()]));
+      $this->messenger()->addError($this->t('The feed from %site seems to be broken because of error "%error".', ['%site' => $feed->label(), '%error' => $e->getMessage()]));
 
       return FALSE;
     }
diff --git a/core/modules/aggregator/src/Plugin/aggregator/processor/DefaultProcessor.php b/core/modules/aggregator/src/Plugin/aggregator/processor/DefaultProcessor.php
index 5f0eade..565644c 100644
--- a/core/modules/aggregator/src/Plugin/aggregator/processor/DefaultProcessor.php
+++ b/core/modules/aggregator/src/Plugin/aggregator/processor/DefaultProcessor.php
@@ -15,6 +15,7 @@
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Messenger\MessengerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
+use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\Url;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 
@@ -32,6 +33,7 @@
 class DefaultProcessor extends AggregatorPluginSettingsBase implements ProcessorInterface, ContainerFactoryPluginInterface {
 
   use ConfigFormBaseTrait;
+  use StringTranslationTrait;
 
   /**
    * Contains the configuration object factory.
@@ -124,14 +126,14 @@ public function buildConfigurationForm(array $form, FormStateInterface $form_sta
     }, array_combine($counts, $counts));
     $intervals = [3600, 10800, 21600, 32400, 43200, 86400, 172800, 259200, 604800, 1209600, 2419200, 4838400, 9676800];
     $period = array_map([$this->dateFormatter, 'formatInterval'], array_combine($intervals, $intervals));
-    $period[FeedStorageInterface::CLEAR_NEVER] = t('Never');
+    $period[FeedStorageInterface::CLEAR_NEVER] = $this->t('Never');
 
     $form['processors'][$info['id']] = [];
     // Only wrap into details if there is a basic configuration.
     if (isset($form['basic_conf'])) {
       $form['processors'][$info['id']] = [
         '#type' => 'details',
-        '#title' => t('Default processor settings'),
+        '#title' => $this->t('Default processor settings'),
         '#description' => $info['description'],
         '#open' => in_array($info['id'], $processors),
       ];
@@ -139,7 +141,7 @@ public function buildConfigurationForm(array $form, FormStateInterface $form_sta
 
     $form['processors'][$info['id']]['aggregator_summary_items'] = [
       '#type' => 'select',
-      '#title' => t('Number of items shown in listing pages'),
+      '#title' => $this->t('Number of items shown in listing pages'),
       '#default_value' => $config->get('source.list_max'),
       '#empty_value' => 0,
       '#options' => $items,
@@ -147,23 +149,23 @@ public function buildConfigurationForm(array $form, FormStateInterface $form_sta
 
     $form['processors'][$info['id']]['aggregator_clear'] = [
       '#type' => 'select',
-      '#title' => t('Discard items older than'),
+      '#title' => $this->t('Discard items older than'),
       '#default_value' => $config->get('items.expire'),
       '#options' => $period,
-      '#description' => t('Requires a correctly configured <a href=":cron">cron maintenance task</a>.', [':cron' => Url::fromRoute('system.status')->toString()]),
+      '#description' => $this->t('Requires a correctly configured <a href=":cron">cron maintenance task</a>.', [':cron' => Url::fromRoute('system.status')->toString()]),
     ];
 
     $lengths = [0, 200, 400, 600, 800, 1000, 1200, 1400, 1600, 1800, 2000];
     $options = array_map(function ($length) {
-      return ($length == 0) ? t('Unlimited') : $this->formatPlural($length, '1 character', '@count characters');
+      return ($length == 0) ? $this->t('Unlimited') : $this->formatPlural($length, '1 character', '@count characters');
     }, array_combine($lengths, $lengths));
 
     $form['processors'][$info['id']]['aggregator_teaser_length'] = [
       '#type' => 'select',
-      '#title' => t('Length of trimmed description'),
+      '#title' => $this->t('Length of trimmed description'),
       '#default_value' => $config->get('items.teaser_length'),
       '#options' => $options,
-      '#description' => t('The maximum number of characters used in the trimmed version of content.'),
+      '#description' => $this->t('The maximum number of characters used in the trimmed version of content.'),
     ];
     return $form;
   }
@@ -244,7 +246,7 @@ public function delete(FeedInterface $feed) {
       $this->itemStorage->delete($items);
     }
     // @todo This should be moved out to caller with a different message maybe.
-    $this->messenger->addStatus(t('The news items from %site have been deleted.', ['%site' => $feed->label()]));
+    $this->messenger->addStatus($this->t('The news items from %site have been deleted.', ['%site' => $feed->label()]));
   }
 
   /**
diff --git a/core/modules/aggregator/tests/modules/aggregator_test/src/Plugin/aggregator/processor/TestProcessor.php b/core/modules/aggregator/tests/modules/aggregator_test/src/Plugin/aggregator/processor/TestProcessor.php
index 294697a..f90277f 100644
--- a/core/modules/aggregator/tests/modules/aggregator_test/src/Plugin/aggregator/processor/TestProcessor.php
+++ b/core/modules/aggregator/tests/modules/aggregator_test/src/Plugin/aggregator/processor/TestProcessor.php
@@ -77,13 +77,13 @@ public function buildConfigurationForm(array $form, FormStateInterface $form_sta
 
     $form['processors'][$info['id']] = [
       '#type' => 'details',
-      '#title' => t('Test processor settings'),
+      '#title' => 'Test processor settings',
       '#description' => $info['description'],
       '#open' => in_array($info['id'], $processors),
     ];
     // Add some dummy settings to verify settingsForm is called.
     $form['processors'][$info['id']]['dummy_length'] = [
-      '#title' => t('Dummy length setting'),
+      '#title' => 'Dummy length setting',
       '#type' => 'number',
       '#min' => 1,
       '#max' => 1000,
diff --git a/core/modules/aggregator/tests/src/Functional/ItemCacheTagsTest.php b/core/modules/aggregator/tests/src/Functional/ItemCacheTagsTest.php
index c7bce98..93b6e8e 100644
--- a/core/modules/aggregator/tests/src/Functional/ItemCacheTagsTest.php
+++ b/core/modules/aggregator/tests/src/Functional/ItemCacheTagsTest.php
@@ -56,7 +56,7 @@ protected function createEntity() {
     // Create a "Llama" aggregator feed item.
     $item = Item::create([
       'fid' => $feed->id(),
-      'title' => t('Llama'),
+      'title' => 'Llama',
       'path' => 'https://www.drupal.org/',
     ]);
     $item->save();
@@ -77,7 +77,7 @@ public function testEntityCreation() {
     // Now create a feed item in that feed.
     Item::create([
       'fid' => $this->entity->getFeedId(),
-      'title' => t('Llama 2'),
+      'title' => 'Llama 2',
       'path' => 'https://groups.drupal.org/',
     ])->save();
 
diff --git a/core/modules/aggregator/tests/src/Kernel/ItemWithoutFeedTest.php b/core/modules/aggregator/tests/src/Kernel/ItemWithoutFeedTest.php
index f4a5e8f..8a604ee 100644
--- a/core/modules/aggregator/tests/src/Kernel/ItemWithoutFeedTest.php
+++ b/core/modules/aggregator/tests/src/Kernel/ItemWithoutFeedTest.php
@@ -31,7 +31,7 @@ protected function setUp(): void {
    */
   public function testEntityCreation() {
     $entity = Item::create([
-      'title' => t('Llama 2'),
+      'title' => 'Llama 2',
       'path' => 'https://groups.drupal.org/',
     ]);
     $violations = $entity->validate();
