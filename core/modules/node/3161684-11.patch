diff --git a/core/modules/node/tests/src/Functional/NodeFieldMultilingualTest.php b/core/modules/node/tests/src/Functional/NodeFieldMultilingualTest.php
index a066a03..0024105 100644
--- a/core/modules/node/tests/src/Functional/NodeFieldMultilingualTest.php
+++ b/core/modules/node/tests/src/Functional/NodeFieldMultilingualTest.php
@@ -45,16 +45,21 @@ protected function setUp(): void {
     ]);
     $this->drupalLogin($admin_user);
 
+    // Add a new language.
+    ConfigurableLanguage::createFromLangcode('it')->save();
+
     // Enable URL language detection and selection.
-    $edit = ['language_interface[enabled][language-url]' => '1'];
-    $this->drupalPostForm('admin/config/regional/language/detection', $edit, t('Save settings'));
+    $config = $this->config('language.negotiation');
+    $config->set('url.prefixes', [
+      'en' => 'en',
+      'de' => 'de',
+    ])->save();
 
     // Set "Basic page" content type to use multilingual support.
-    $edit = [
-      'language_configuration[language_alterable]' => TRUE,
-    ];
-    $this->drupalPostForm('admin/structure/types/manage/page', $edit, t('Save content type'));
-    $this->assertRaw(t('The content type %type has been updated.', ['%type' => 'Basic page']), 'Basic page content type has been updated.');
+    $entity_type = $this->container->get('entity_type.manager')->getStorage('language_content_settings')->create([
+      'target_entity_type_id' => $entity_type,
+      'target_bundle' => $bundle,
+    ])->save();
 
     // Make node body translatable.
     $field_storage = FieldStorageConfig::loadByName('node', 'body');
diff --git a/core/modules/views/3168979-4.patch b/core/modules/views/3168979-4.patch
deleted file mode 100644
index 9da7555..0000000
--- a/core/modules/views/3168979-4.patch
+++ /dev/null
@@ -1,13 +0,0 @@
-diff --git a/core/modules/views/src/Form/ViewsForm.php b/core/modules/views/src/Form/ViewsForm.php
-index 575b923..52d0fbe 100644
---- a/core/modules/views/src/Form/ViewsForm.php
-+++ b/core/modules/views/src/Form/ViewsForm.php
-@@ -166,7 +166,7 @@ public function buildForm(array $form, FormStateInterface $form_state, ViewExecu
-     ];
- 
-     $form_object = $this->getFormObject($form_state);
--    $form += $form_object->buildForm($form, $form_state, $view, $output);
-+    $form = array_merge($form, $form_object->buildForm($form, $form_state, $view, $output));
- 
-     return $form;
-   }
